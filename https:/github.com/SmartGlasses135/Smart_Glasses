#include <SoftwareSerial.h>
SoftwareSerial myserial (2,3);

unsigned long signal_len,t1,t2;   //time for which button is pressed
int inputPin = 7;                 //input pin for push button
int puzzerPin = 11;                   //output pin for puzzer
String code = "";                 //string in which one alphabet is stored



void setup()

{
  Serial.begin(9600);
  myserial.begin(9600);
  pinMode(inputPin, INPUT_PULLUP); //internal pullup resistor is used to simplify the circuit
  pinMode(puzzerPin,OUTPUT);
}

void loop()
{
  if(myserial.available()){
    Serial.println(myserial.read());
  }
  if(Serial.available()){
    myserial.write(Serial.read());
  }
  
NextDotDash:
  while (digitalRead(inputPin) == HIGH) {}
  t1 = millis();                            //time at button press
  digitalWrite(puzzerPin, HIGH);               //puzzer on while button pressed
  while (digitalRead(inputPin) == LOW) {}
  t2 = millis();                            //time at button release
  digitalWrite(puzzerPin, LOW);                //puzzer off on button release
  signal_len = t2 - t1;                     //time for which button is pressed
  if (signal_len > 50)                      //to account for switch debouncing
  {
    code += readio();                       //function to read dot or dash
  }
  while ((millis() - t2) < 500)           //if time between button press greater than 0.5sec, skip loop and go to next alphabet
  {     
    if (digitalRead(inputPin) == LOW)
    {
      goto NextDotDash;
    }
  }
  convertor();                          //function to decipher code into alphabet
}
char readio()
{
  if (signal_len < 600 && signal_len > 50)
  {
    return '.';                        //if button press less than 0.6sec, it is a dot
  }
  else if (signal_len > 600)
  {
    return '-';                        //if button press more than 0.6sec, it is a dash
  }
}
void convertor()
{
  static String letters[] = {".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", ".---", "-.-", ".-..", "--", "-.", "---", ".--.", "--.-",
                             ".-.", "...", "-", "..-", "...-", ".--", "-..-", "-.--", "--..", "E"
                            };
  int i = 0;                            
  if (code == "......")
  {
    Serial.print(" ");
    myserial.write(" ");//for break
  }else if (code == ".....")
  {
    Serial.print(".");
    myserial.write(".");//for break
  }
  else if (code == "-....")
  {
    Serial.print("I feel pain ,I want taking medicine ");
    myserial.write("I feel pain,I want taking medicine ");//for break
  }
  else if (code == ".-...")
  {
    Serial.print("Iam hungry ");
    myserial.write("Iam hungry ");//for break
  }
  else if (code == "..-..")
  {
    Serial.print("Iam thirsty ");
    myserial.write("Iam thirsty  ");//for break
  }
  else if (code == "...-.")
  {
    Serial.print("I need help ");
    myserial.write("I need help ");//for break
  }
  else if (code == "....-")
  {
    Serial.print("I feel hot ");
    myserial.write("I feel hot ");//for break
  }
  else
  {
    while (letters[i] != "E")  //loop for comparing input code with letters array
    {
      if (letters[i] == code)
      { 
        
        Serial.print(char('A' + i));
        myserial.write(char('A' + i));
        break;
      }
      i++;
    }
    if (letters[i] == "E")
    {
      Serial.println("");  //if input code doesn't match any letter, error
      myserial.println("");
    }
  }
  code = "";                            //reset code to blank string
} 
